# PinkPlayEvo SWR - Multi-stage Production Dockerfile
# Moduł Świadomego Wnioskowania Resztkowego v2.0

FROM node:18-alpine AS base

# Install Python 3 and required system dependencies
RUN apk add --no-cache \
    python3 \
    py3-pip \
    python3-dev \
    gcc \
    musl-dev \
    && ln -sf python3 /usr/bin/python

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install Node.js dependencies
FROM base AS dependencies
RUN npm ci --only=production && npm cache clean --force

# Production stage
FROM base AS production

# Create non-root user for security
RUN addgroup -g 1001 -S pinkplay && \
    adduser -S pinkplay -u 1001 -G pinkplay

# Copy dependencies from previous stage
COPY --from=dependencies /app/node_modules ./node_modules

# Copy application code
COPY --chown=pinkplay:pinkplay . .

# Create necessary directories
RUN mkdir -p logs data/analytics && \
    chown -R pinkplay:pinkplay logs data

# Set Python path for SWR modules
ENV PYTHONPATH=/app/core:/app:$PYTHONPATH
ENV NODE_ENV=production
ENV SWR_LOG_LEVEL=info
ENV PORT=3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/health', (res) => { \
    process.exit(res.statusCode === 200 ? 0 : 1) \
  }).on('error', () => process.exit(1))"

# Switch to non-root user
USER pinkplay

# Expose port
EXPOSE 3000

# Start command
CMD ["npm", "start"]

# Labels for metadata
LABEL version="1.0.0"
LABEL description="PinkPlayEvo with MŚWR v2.0 Conscious Inference"
LABEL maintainer="PinkPlayEvo Team"
LABEL architecture="6-layer-consciousness"
LABEL swr-version="2.0"
LABEL inference-time="<1ms"
LABEL anti-fatal-protocol="enabled"